### projects completion - begin. generated by omelette.js ###
if type compdef &>/dev/null; then
  _projects_complette() {
    compadd -- `projects --compzsh --compgen "${CURRENT}" "${words[CURRENT-1]}" "${BUFFER}"`
  }
  compdef _projects_complette projects
elif type complete &>/dev/null; then
  _projects_complette() {
    local cur prev

    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    COMPREPLY=( $(compgen -W '$(projects --compbash --compgen "${COMP_CWORD}" "${prev}" "${COMP_LINE}")' -- "$cur") )

    [[ $COMPREPLY ]] && return

    _filedir
  }
  complete -F _projects_complette projects
fi
### projects completion - end ###
### p completion - begin. generated by omelette.js ###
if type compdef &>/dev/null; then
  _p_complette() {
    compadd -- `projects --compzsh --compgen "${CURRENT}" "${words[CURRENT-1]}" "${BUFFER}"`
  }
  compdef _p_complette p
elif type complete &>/dev/null; then
  _p_complette() {
    local cur prev

    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}

    COMPREPLY=( $(compgen -W '$(projects --compbash --compgen "${COMP_CWORD}" "${prev}" "${COMP_LINE}")' -- "$cur") )

    [[ $COMPREPLY ]] && return

    _filedir
  }
  complete -F _p_complette p
fi
### p completion - end ###
